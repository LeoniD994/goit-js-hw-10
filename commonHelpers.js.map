{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from \"flatpickr\";\n// Додатковий імпорт стилів\nimport \"flatpickr/dist/flatpickr.min.css\";\n// Описаний у документації\nimport iziToast from \"izitoast\";\n// Додатковий імпорт стилів\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst btnStart = document.querySelector('button[data-start]');\nconst inputWindow = document.querySelector(\"#datetime-picker\");\nconst days = document.querySelector('span[data-days]');\nconst hours = document.querySelector('span[data-hours]');\nconst minutes = document.querySelector('span[data-minutes]');\nconst seconds = document.querySelector('span[data-seconds]');\n\n\n// btnStart.disablet = true;\n\nlet countdown;\nconst DELAY = 1000;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n    if (selectedDates[0] < new Date()) {\n      iziToast.show({\n        message: \"Please choose a date in the future\",position: 'topCenter',backgroundColor: 'red', messageColor: 'white',messageSize: '20'\n      });\n        btnStart.disabled = true;\n        \n    } else {\n        countdown = selectedDates[0] - new Date(); \n        btnStart.disabled = false;\n    }\n    },\n};\nflatpickr(inputWindow, options)\n\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n  // Remaining days\n    const days = Math.floor(ms / day);\n  // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\nbtnStart.addEventListener('click', startCoint);\n\nfunction startCoint() {\n  btnStart.disabled = true; \n  btnStart.style.background = 'black';\n  btnStart.style.color = 'gray'\n    inputWindow.disabled = true; \n    let timeObject = convertMs(countdown);\n\n    const timerId = setInterval(() => {\n        if (countdown >= 999) {\n            \n        btnStart.disabled = true;    \n        countdown -= 1000;\n        let timeObject = convertMs(countdown);\n        padStart(timeObject);\n        } else {\n            inputWindow.disabled = false;\n        };\n    }, DELAY); \n\n};\nfunction padStart(evt){\n    days.textContent = evt.days;\n    hours.textContent = evt.hours;\n    minutes.textContent = evt.minutes;\n    seconds.textContent = evt.seconds;\n}"],"names":["btnStart","inputWindow","days","hours","minutes","seconds","countdown","DELAY","options","selectedDates","iziToast","flatpickr","convertMs","ms","startCoint","timeObject","padStart","evt"],"mappings":"2GASA,MAAMA,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAc,SAAS,cAAc,kBAAkB,EACvDC,EAAO,SAAS,cAAc,iBAAiB,EAC/CC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAU,SAAS,cAAc,oBAAoB,EACrDC,EAAU,SAAS,cAAc,oBAAoB,EAK3D,IAAIC,EACJ,MAAMC,EAAQ,IAERC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnBA,EAAc,CAAC,EAAI,IAAI,MACzBC,EAAS,KAAK,CACZ,QAAS,qCAAqC,SAAU,YAAY,gBAAiB,MAAO,aAAc,QAAQ,YAAa,IACvI,CAAO,EACCV,EAAS,SAAW,KAGpBM,EAAYG,EAAc,CAAC,EAAI,IAAI,KACnCT,EAAS,SAAW,GAEvB,CACL,EACAW,EAAUV,EAAaO,CAAO,EAG9B,SAASI,EAAUC,EAAI,CAQnB,MAAMX,EAAO,KAAK,MAAMW,EAAK,KAAG,EAE1BV,EAAQ,KAAK,MAAOU,EAAK,MAAO,IAAI,EAEpCT,EAAU,KAAK,MAAQS,EAAK,MAAO,KAAQ,GAAM,EAEjDR,EAAU,KAAK,MAASQ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAX,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEAL,EAAS,iBAAiB,QAASc,CAAU,EAE7C,SAASA,GAAa,CACpBd,EAAS,SAAW,GACpBA,EAAS,MAAM,WAAa,QAC5BA,EAAS,MAAM,MAAQ,OACrBC,EAAY,SAAW,GAGP,YAAY,IAAM,CAC9B,GAAIK,GAAa,IAAK,CAEtBN,EAAS,SAAW,GACpBM,GAAa,IACb,IAAIS,EAAaH,EAAUN,CAAS,EACpCU,EAASD,CAAU,CAC3B,MACYd,EAAY,SAAW,EAEnC,EAAOM,CAAK,CAEZ,CACA,SAASS,EAASC,EAAI,CAClBf,EAAK,YAAce,EAAI,KACvBd,EAAM,YAAcc,EAAI,MACxBb,EAAQ,YAAca,EAAI,QAC1BZ,EAAQ,YAAcY,EAAI,OAC9B"}